package org.ds.rps.interfaces;


/**
* org/ds/rps/interfaces/GameInterfaceOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from GameInterfaces.idl
* 29 March 2015 22:08:29 o'clock IST
*/

public interface GameInterfaceOperations 
{

  //Player methods
  String subscribe (String player_name, org.ds.rps.interfaces.CallBack callback) throws org.ds.rps.interfaces.create_fail;
  boolean unsubscribe (String player_id) throws org.ds.rps.interfaces.unknown_player, org.ds.rps.interfaces.destroy_fail;
  String getPlayerNameById (String player_id) throws org.ds.rps.interfaces.unknown_player;

  //Game methods
  boolean hasOpenSlot ();
  boolean isValidPlayer (String player_id) throws org.ds.rps.interfaces.unknown_player;
  boolean setPlayerIsReady (String player_id, boolean ready) throws org.ds.rps.interfaces.unknown_player;
  boolean checkIfPlayersAreReadyToStart ();
  boolean setPlayerSelection (String player_id, int choice) throws org.ds.rps.interfaces.unknown_player;
  boolean checkIfPlayersHaveSelected ();
  boolean calculateResults ();
  boolean endCurrentGame ();
  boolean hasAPlayerLeft ();

  //Callback method
  void event_listener (String player_id, String message, org.ds.rps.interfaces.CallBack callback) throws org.ds.rps.interfaces.unknown_player;

  //File transfer method
  byte[] getHowTooPlayFile (String file_name) throws org.ds.rps.interfaces.unknown_path;

  //Any method
  void currGameDetails (String player_id, org.omg.CORBA.AnyHolder anyGame) throws org.ds.rps.interfaces.unknown_player;
} // interface GameInterfaceOperations
